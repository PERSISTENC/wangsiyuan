(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{407:function(a,s,e){"use strict";e.r(s);var t=e(56),n=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"浏览器缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[a._v("#")]),a._v(" 浏览器缓存")]),a._v(" "),e("p",[a._v("浏览器每次发起请求得时候，会在本地缓存中查找结果以及缓存标识，根据缓存标识来判断是否使用本地缓存。如果缓存有效，则使\n用本地缓存；否则，则向服务器发起请求并携带缓存标识。根据是否需向服务器发起HTTP请求，将缓存过程划分为两个部分：\n强制缓存和协商缓存，强缓优先于协商缓存。")]),a._v(" "),e("h3",{attrs:{id:"强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[a._v("#")]),a._v(" 强缓存")]),a._v(" "),e("p",[a._v("服务器会通知浏览器缓存一个时间 "),e("code",[a._v("Cache-Control")]),a._v(" "),e("code",[a._v("Expires")]),a._v("，如果在该时间缓存，直接走缓存，不用发送给服务端，如果过期了 就会重新发起")]),a._v(" "),e("h3",{attrs:{id:"协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[a._v("#")]),a._v(" 协商缓存")]),a._v(" "),e("p",[a._v("服务器会设置一个"),e("code",[a._v("Etag")]),a._v("和 "),e("code",[a._v("Last-Modified")]),a._v(",在第二次请求得时候服务端会检验，如果资源有更新，重新下发字段，资源没更新，会直接返回308 通过浏览器从缓存里面读取缓存")]),a._v(" "),e("h2",{attrs:{id:"localstorage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[a._v("#")]),a._v(" LocalStorage")]),a._v(" "),e("ul",[e("li",[a._v("localStorage是本地缓存,也是永久缓存（在用户不清楚缓存的前提下）所以在部分得业务场景我们需要给他设置一个过期时间，在获取缓存得时候在手动判断是否过期，")]),a._v(" "),e("li",[a._v("localStorage只能存储字符串，大小约为5MB")]),a._v(" "),e("li",[a._v("localStroage遵循同源策略，在同一域名下同一个浏览器不同得窗口页面，操作得都是同一个localStorage")])]),a._v(" "),e("p",[a._v("封装了两个公告方法用于取缓存和设置缓存，同时我也在axios请求方法内置了接口缓存，核心方法也是下面的两个")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("/**\n * @description 从localstorage 设置 缓存\n * @param {String} _cacheMaxAge 过期时间 \n * @param {String} cacheKey 缓存key\n * @param {String} cacheData 缓存数据\n * \n */\n export const setLocalStorage = (cacheKey,_cacheMaxAge,cacheData) => {\n     const cache = {\n         cacheTime:new Date().getTime(), // 缓存时间\n         timeout:_cacheMaxAge, // 过期时间\n         cache:cacheData\n     }\n     window.localStorage.setItem(cacheKey,JSON.stringify(cache))\n }\n/**\n * @description 从localstorage 取 缓存 判断边界值 不符合条件返回null 符合条件 返回 cache response 信息\n * @param {request} 请求参数\n */\n export const getLocalStorage = (cacheKey) => {\n    let cacheData = window.localStorage.getItem(cacheKey)\n    const curTime = new Date().getTime()\n    // 判断 cache 是否过期\n    if (cacheData){\n        cacheData = JSON.parse(cacheData)\n        const cacheAllTime = cacheData.cacheTime + cacheData.timeout \n        // 过期了\n       if (cacheAllTime - curTime <= 0) {\n           remoreLocalStorage(cacheKey)\n          return null\n       }else{\n           return cacheData.cache\n       }\n    }\n    return null\n }\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br"),e("span",{staticClass:"line-number"},[a._v("30")]),e("br"),e("span",{staticClass:"line-number"},[a._v("31")]),e("br"),e("span",{staticClass:"line-number"},[a._v("32")]),e("br"),e("span",{staticClass:"line-number"},[a._v("33")]),e("br"),e("span",{staticClass:"line-number"},[a._v("34")]),e("br"),e("span",{staticClass:"line-number"},[a._v("35")]),e("br"),e("span",{staticClass:"line-number"},[a._v("36")]),e("br")])]),e("h2",{attrs:{id:"sessionstorage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[a._v("#")]),a._v(" SessionStorage")]),a._v(" "),e("p",[a._v("sessionStorage为会话缓存，其生命周期仅在当前会话下有效，只要这个浏览器没关闭，即使 进入另外一个页面,那么缓存也始终存在，")]),a._v(" "),e("h2",{attrs:{id:"cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[a._v("#")]),a._v(" Cookie")]),a._v(" "),e("ul",[e("li",[a._v("Cookie一开始是解决http 无状态请求的一种方式，在第一次请求服务端的时候，服务端会根据业务场景需要设置cookie给浏览器，以后的请求 浏览器会自动把cookie携带发送给服务端")]),a._v(" "),e("li",[a._v("Cookie 存储大小为4kb，如果服务端不设置过期时间，会一直存储在内存中，直到浏览器的关闭而销毁，如果设置了过期时间会存储在硬盘中")])])])}),[],!1,null,null,null);s.default=n.exports}}]);